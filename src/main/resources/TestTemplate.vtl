package $package;

import java.util.concurrent.TimeUnit;
import org.junit.*;
import static org.junit.Assert.*;
import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;

/**
 * Automaticly generated WebDriver test skeleton
 * contains examples for String fields
 * When using the provided JSF examples, make sure to check
 * the IDs of multi-word entities (camel case, spacing)
 * 
 * Locatind UI elements: http://www.seleniumhq.org/docs/03_webdriver.jsp#locating-ui-elements-webelements
 *
 */
public class ${ClassToTest}SeleniumTest {

    private WebDriver driver;
    private String baseUrl;
    private StringBuffer verificationErrors = new StringBuffer();
    private String indexPage;

    @Before
    public void setUp() throws Exception {
        driver = new FirefoxDriver();  
        baseUrl = "http://localhost:8080/";
		// TODO: add path to index page 
        indexPage = "index page path"; // JSF example: "/${projectName}/faces/index.xhtml"; 
		driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
    }

    @Test
    public void testCRUD() throws Exception {
        // Create
        driver.get(baseUrl + indexPage);
        driver.findElement(By.linkText("${ClassToTest}")).click();
        driver.findElement(By.linkText("Create New")).click();

        #foreach( $field in $fields )
            #set( $fieldName = $field.getName() )       
			#set( $FieldName = $field.getName().substring(0,1).toUpperCase() + $field.getName().substring(1) )

            // ${fieldName}
			// TODO: add webelement ID 
			String ${fieldName}TextBoxId = "create: insert textbox id";  // create:${classToTest}Bean${ClassToTest}${FieldName}
            WebElement ${fieldName}TextBox = driver.findElement(By.id(${fieldName}TextBoxId));
            ${fieldName}TextBox.clear();
            String ${fieldName} = "test_${fieldName}"; // example for String fields
            ${fieldName}TextBox.sendKeys(${fieldName});
        #end
        driver.findElement(By.linkText("Save")).click();
		
		// TODO: add webelement ID 
		String entityRecordId = "insert element id"; // search:${classToTest}BeanPageItems:0:item${FieldName}
        assertTrue(isElementPresent(By.id(entityRecordId))); 
        driver.findElement(By.id(entityRecordId)).click();

        try {
			String elementId = "";
            #foreach( $field in $fields )
                #set( $fieldName = $field.getName() )        
				#set( $FieldName = $field.getName().substring(0,1).toUpperCase() + $field.getName().substring(1) )
			    				
				// TODO: add webelement ID 
				elementId = "insert element id"; // ${classToTest}Bean${ClassToTest}$FieldName
                WebElement ${fieldName}Result = driver.findElement(By.id(elementId));
                assertTrue(${fieldName}Result.getText().matches(${fieldName}));
            #end
        } catch (Error e) {
            verificationErrors.append(e.toString());
        }

        // Edit
        driver.get(baseUrl + indexPage);
		// TODO: check entity name (spacing)
		String entityName = "${ClassToTest}";
        driver.findElement(By.linkText(entityName)).click();
        driver.findElement(By.id(entityRecordId)).click();
        driver.findElement(By.linkText("Edit")).click();

        #foreach( $field in $fields )
            #set( $fieldName = $field.getName() )
            #set( $FieldName = $field.getName().substring(0,1).toUpperCase() + $field.getName().substring(1) )

            // ${fieldName}
            ${fieldName}TextBox = driver.findElement(By.id(${fieldName}TextBoxId));
            ${fieldName}TextBox.clear();
            String new${FieldName} = "test_${fieldName}2";  // example for String fields
            ${fieldName}TextBox.sendKeys(new${FieldName});
        #end
        driver.findElement(By.linkText("Save")).click();

        try {
            #foreach( $field in $fields )
                #set( $fieldName = $field.getName() )
				                
				#set( $FieldName = $field.getName().substring(0,1).toUpperCase() + $field.getName().substring(1) )
				
				// TODO: add webelement ID 
				String ${fieldName}ResultId = "result id";  // ${classToTest}Bean${ClassToTest}${FieldName}
				WebElement ${fieldName}Result = driver.findElement(By.id(${fieldName}ResultId));
                assertTrue(${fieldName}Result.getText().matches(new${FieldName}));
            #end
        } catch (Error e) {
            verificationErrors.append(e.toString());
        }

        // Delete
        driver.get(baseUrl + indexPage);
        driver.findElement(By.linkText(entityName)).click();

		// TODO: add webelement ID 
		entityRecordId = "insert element id"; // search:${classToTest}BeanPageItems:0:item${FieldName}
        assertTrue(isElementPresent(By.id(entityRecordId))); 
		
        assertTrue(isElementPresent(By.id(entityRecordId)));
        driver.findElement(By.id(entityRecordId)).click();
        driver.findElement(By.linkText("Edit")).click();
        driver.findElement(By.linkText("Delete")).click();

        driver.findElement(By.linkText(entityName)).click();
        assertFalse(isElementPresent(By.id(entityRecordId)));
    }

    @After
    public void tearDown() throws Exception {
        driver.quit();
        String verificationErrorString = verificationErrors.toString();
        if (!"".equals(verificationErrorString)) {
            fail(verificationErrorString);
        }
    }

    private boolean isElementPresent(By by) {
        try {
        driver.findElement(by);
        return true;
        } catch (NoSuchElementException e) {
            return false;
        }
    }
}
